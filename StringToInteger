class Solution:
    def myAtoi(self, s: str) -> int:
        # Step 1: Ignore leading whitespace
        i = 0
        n = len(s)
        while i < n and s[i] == ' ':
            i += 1
        
        # If the entire string was whitespace
        if i == n:
            return 0
        
        # Step 2: Check for optional sign
        sign = 1
        if s[i] == '+':
            i += 1
        elif s[i] == '-':
            sign = -1
            i += 1
        
        # Step 3: Convert digits to an integer
        result = 0
        while i < n and s[i].isdigit():
            digit = int(s[i])
            result = result * 10 + digit
            i += 1
        
        # Step 4: Apply the sign
        result *= sign
        
        # Step 5: Handle overflow
        INT_MIN = -2**31
        INT_MAX = 2**31 - 1
        if result < INT_MIN:
            return INT_MIN
        if result > INT_MAX:
            return INT_MAX
        
        # Step 6: Return the final result
        return result
